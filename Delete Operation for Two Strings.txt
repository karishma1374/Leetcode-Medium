/*Longest common Subsequence CHILDðŸ™‚

Algorithm:

STEP 1. Find the longest common subsequence (LCS)
STEP 2. no of deletions will be : (word1.length - LCS) + (word2.length - LCS) 

DP CODE:  */


class Solution {
public:
    int minDistance(string word1, string word2) {
      
        int n=word1.size();
        int m=word2.size();
        int t[n+1][m+1]; 
        
        for(int i=0;i<n+1;i++)  t[i][0]=0;
      
        for(int i=0;i<m+1;i++)  t[0][i]=0;
    
        for(int i=1;i<n+1;i++)
           for(int j=1;j<m+1;j++)
            {
               if(word1[i-1]==word2[j-1])
               {
                  t[i][j]= 1+ t[i-1][j-1];
               }
                else
                {
                   t[i][j]=max(t[i-1][j],t[i][j-1]);
                } 
            }
      
        return (n- t[n][m])+(m-t[n][m]);
    }
};