/*
If we know the longest palindromic sub-sequence is x and the length of the string is n then, what is the answer to this problem? 
It is n - x as we need n - x insertions to make the remaining characters also palindrome.

DP CODE:<3      */

class Solution {
public:
    int minInsertions(string s) {
        string w=s;
        reverse(s.begin(),s.end());
        int n=s.size();
        int m=n;//since both are similar strings 
        int t[n+1][m+1];//n & m are equal anyways so doesnt really matter 
        
        for(int i=0;i<n+1;i++)  t[i][0]=0;
      
        for(int i=0;i<m+1;i++)  t[0][i]=0;
    
        for(int i=1;i<n+1;i++)
           for(int j=1;j<m+1;j++)
            {
               if(s[i-1]==w[j-1])
               {
                  t[i][j]= 1+ t[i-1][j-1];
               }
                else
                {
                   t[i][j]=max(t[i-1][j],t[i][j-1]);
                } 
            }
      
        return n- t[n][m];//where t[n][m]gives the length of Longest Palindromic subsequence 
    }
};